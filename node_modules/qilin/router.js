var url = require('url'),
	fs = require('fs'),
	path = require('path');
function route(req,res,handler,vhostsOpt, postData){
	var basePath = vhostsOpt.DocumentRoot;
	var urlParse = url.parse(req.url);
	var pathname = urlParse.pathname;
	var query = urlParse.query;
	var basename = path.basename(pathname);
 	var dirname = path.dirname(pathname);
  	var ext = pathname.match(/([^.]+|)$/)[0];
	var evt = {
		hostOption: vhostsOpt,
		host: req.headers.host,
		basePath: basePath,
		pathname: pathname,
		query: query,
		basename: basename,
		dirname: dirname,
		ext: ext
	};
	postData && (evt["postData"] = postData);
	console.log("请求路径："+ pathname);
	//主站等需要直接代理到外网
	if(vhostsOpt.goback) {
		handler["ACTION_PROXY_BACK"](req,res,evt,postData);
		return;
	}
	path.exists(basePath + pathname, function (exists) {
  		if(exists){
			fs.stat(basePath + pathname,function(err,stats){
				if(err){
					handler["SERVER_ERROR"](req,res,evt);
					return;
				}
				if(stats.isFile()){
					switch(ext){
						case "js":
							handler["ACTION_COMBO_JS"](req,res,evt);
						break;
						case "css":
							handler["ACTION_COMBO_CSS"](req,res,evt);
						break;
						case "php":
							handler["ACTION_RENDER_PHP"](req,res,evt);
						break;
						default:
							handler["ACTION_RESPONSE_FILE"](req,res,evt);
						break;
					}			
				}
				if(stats.isDirectory()) {
					handler["ACTION_LIST_DIR"](req,res,evt);		
				}	
			});
		}else{
			if(vhostsOpt.notFundtoBack){
				handler["ACTION_PROXY_BACK"](req,res,evt,postData);
				return;
			}
			if(typeof handler[pathname] == "function") {
				handler[pathname](req,res,evt);
			}
			handler["NOT_FOUND"](req,res,evt);			
		}
	});
}
exports.route = route;

